name: Documentation

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

  # This enables a button to manually trigger the workflow in the github actions UI
  workflow_dispatch:
    inputs:
      branch_name:
        description: 'Branch to run workflow on'
        required: true
        default: 'feature/mkdocs'

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for mike versioning

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material mike pillow cairosvg mkdocs-glightbox

      - name: Configure Git for mike
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Extract version from tag or use 'dev'
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "alias=latest" >> $GITHUB_OUTPUT
            echo "is_release=true" >> $GITHUB_OUTPUT
          else
            echo "version=dev" >> $GITHUB_OUTPUT
            echo "alias=dev" >> $GITHUB_OUTPUT
            echo "is_release=false" >> $GITHUB_OUTPUT
          fi

      - name: Build documentation for pull request review
        if: github.event_name == 'pull_request'
        # TODO: Restore the --strict flag after testing
        #run: mkdocs build --strict
        run: mkdocs build

      - name: Upload artifact for pull request review
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/
      
      - name: Deploy development docs
        # TODO: Uncomment line below after done testing
        #if: github.event_name == 'push' # && github.ref == 'refs/heads/main'
        run: |
          mike deploy --push --update-aliases dev development
          mike set-default --push dev

      - name: Deploy release docs with versioning
        if: steps.get_version.outputs.is_release == 'true'
        run: |
          VERSION=${{ steps.get_version.outputs.version }}
          mike deploy --push --update-aliases $VERSION latest
          mike set-default --push latest


